version: '2'

services:
  app:
    image: 'authentication-docker:latest'
    build:
      context: .
    container_name: authentication
    ports:
      - "1000:1000"
    depends_on:
      - postgresql
      - rabbitmq
#      - redis
    #      - firebase
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ec2-52-200-215-149.compute-1.amazonaws.com:5432/da123k6qij3ong
      - SPRING_DATASOURCE_USERNAME=inxdeiyuuyrtpa
      - SPRING_DATASOURCE_PASSWORD=5091ced29c41c7b07813ebe6d0250ebf7e4c85755704628fd08e00cbf0f6ee73
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#  redis:
#    image: redis
#    #    contain: redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./redis.conf:/src/main/java/guc/bttsBtngan/authentication/config/JavaRedisConfig.java
  postgresql:
    image: 'postgres:13.1-alpine'
    container_name: postgresql
    environment:
      - POSTGRES_USER=inxdeiyuuyrtpa
      - POSTGRES_PASSWORD=5091ced29c41c7b07813ebe6d0250ebf7e4c85755704628fd08e00cbf0f6ee73
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "25672:25672"
      - "5672:5672"
    networks:
      - spring



networks:
  postgresql:
    driver: bridge
  app:
    driver: bridge
  rabbitmq:
    driver: bridge
  spring:
    driver : bridge
#  redis:
#    driver : bridge
